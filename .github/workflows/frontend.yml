name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.10.0
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      working-directory: ./frontend
      run: pnpm install --frozen-lockfile
      
    - name: Build with Next.js
      working-directory: ./frontend
      run: pnpm run build
      env:
        NODE_ENV: production
        
    - name: Create .nojekyll file
      working-directory: ./frontend/out
      run: touch .nojekyll
      
    - name: Copy public assets
      working-directory: ./frontend
      run: |
        echo "复制静态资源..."
        # 确保ProdLogos目录存在
        mkdir -p ./out/ProdLogos
        # 复制所有图片文件
        cp -r ./public/ProdLogos/* ./out/ProdLogos/
        # 复制其他public文件（如果还没有的话）
        cp ./public/*.svg ./out/ 2>/dev/null || true
        cp ./public/*.ico ./out/ 2>/dev/null || true
        echo "静态资源复制完成"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend/out'
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
